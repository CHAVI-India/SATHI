# Generated by Django 5.2.1 on 2025-05-12 03:19

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ConstructScale',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Construct Scale',
                'verbose_name_plural': 'Construct Scales',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='LikertScale',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('likert_scale_name', models.CharField(blank=True, help_text='The name of the Likert Scale', max_length=255, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Likert Scale Response',
                'verbose_name_plural': 'Likert Scale Responses',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='RangeScale',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('range_scale_name', models.CharField(blank=True, help_text='The name of the Range Scale', max_length=255, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Range Scale',
                'verbose_name_plural': 'Range Scales',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('response_type', models.CharField(choices=[('Text', 'Text Response'), ('Number', 'Numeric Response'), ('Boolean', 'Yes/No Response'), ('Likert', 'Likert Scale'), ('Ranking', 'Ranking Response'), ('Range', 'Range Response')], max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('construct_scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promapp.constructscale')),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Items',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='RangeScaleResponseOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('min_value', models.DecimalField(decimal_places=2, help_text='The minimum value for the range scale', max_digits=10)),
                ('min_value_text', models.CharField(blank=True, help_text='The text to display for the minimum value', max_length=255, null=True)),
                ('max_value', models.DecimalField(decimal_places=2, help_text='The maximum value for the range scale', max_digits=10)),
                ('max_value_text', models.CharField(blank=True, help_text='The text to display for the maximum value', max_length=255, null=True)),
                ('increment', models.DecimalField(blank=True, decimal_places=2, default=1, help_text='The increment for the range scale. Must be more than 0', max_digits=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('range_scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promapp.rangescale')),
            ],
            options={
                'verbose_name': 'Range Scale Response Option',
                'verbose_name_plural': 'Range Scale Response Options',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='LikertScaleResponseOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('option_text', models.CharField(blank=True, help_text='The text to display for the option', max_length=255, null=True)),
                ('option_order', models.IntegerField(blank=True, help_text='The order of the option. This will be a number.', null=True)),
                ('option_media', models.FileField(blank=True, help_text='The media to display for the option. This will be an audio, video or image.', null=True, upload_to='likert_scale_response_options/')),
                ('option_value', models.DecimalField(blank=True, decimal_places=2, help_text='The value to store for the option. This will be a number with upto 2 decimal places.', max_digits=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('likert_scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promapp.likertscale')),
            ],
            options={
                'verbose_name': 'Likert Scale Response Option',
                'verbose_name_plural': 'Likert Scale Response Options',
                'ordering': ['option_order'],
                'unique_together': {('option_text', 'option_order', 'option_value')},
            },
        ),
    ]
