# Generated by Django 5.2.1 on 2025-05-26 01:56

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('promapp', '0006_constructscale_scale_better_score_direction_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='constructscale',
            name='scale_better_score_direction',
            field=models.CharField(blank=True, choices=[('Higher is Better', 'Higher is Better'), ('Lower is Better', 'Lower is Better'), ('Middle is Better', 'Middle is Better'), ('No Direction', 'No Direction')], help_text='Indicates whether higher or lower scores are better for this construct', max_length=255, null=True, verbose_name='Score Direction'),
        ),
        migrations.AlterField(
            model_name='constructscale',
            name='scale_minimum_clinical_important_difference',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The minimum difference between two scores that would be considered clinically important. Changes exceeding this magnitude will result in clinically significant impact on patient lives.', max_digits=10, null=True, verbose_name='Minimum Clinical Important Difference'),
        ),
        migrations.AlterField(
            model_name='constructscale',
            name='scale_normative_score_mean',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The mean of the normative score for the construct scale. Used to display the normative score reference.', max_digits=10, null=True, verbose_name='Normative Score Mean'),
        ),
        migrations.AlterField(
            model_name='constructscale',
            name='scale_normative_score_standard_deviation',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The standard deviation of the normative score for the construct scale. Used to display the normative score reference.', max_digits=10, null=True, verbose_name='Normative Score Standard Deviation'),
        ),
        migrations.AlterField(
            model_name='constructscale',
            name='scale_threshold_score',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The score which is considered clinically important. Scores above or below this threshold (depending on direction) will be considered clinically actionable.', max_digits=10, null=True, verbose_name='Threshold Score'),
        ),
        migrations.AlterField(
            model_name='item',
            name='item_better_score_direction',
            field=models.CharField(blank=True, choices=[('Higher is Better', 'Higher is Better'), ('Lower is Better', 'Lower is Better'), ('Middle is Better', 'Middle is Better'), ('No Direction', 'No Direction')], help_text='Indicates whether higher or lower scores are better for this item', max_length=255, null=True, verbose_name='Score Direction'),
        ),
        migrations.AlterField(
            model_name='item',
            name='item_minimum_clinical_important_difference',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The minimum difference between two scores that would be considered clinically important. Changes exceeding this magnitude will result in clinically significant impact on patient lives.', max_digits=10, null=True, verbose_name='Minimum Clinical Important Difference'),
        ),
        migrations.AlterField(
            model_name='item',
            name='item_normative_score_mean',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The mean of the normative score for the item. Used to display the normative score reference.', max_digits=10, null=True, verbose_name='Normative Score Mean'),
        ),
        migrations.AlterField(
            model_name='item',
            name='item_normative_score_standard_deviation',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The standard deviation of the normative score for the item. Used to display the normative score reference.', max_digits=10, null=True, verbose_name='Normative Score Standard Deviation'),
        ),
        migrations.AlterField(
            model_name='item',
            name='item_threshold_score',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The score which is considered clinically important. Scores above or below this threshold (depending on direction) will be considered clinically actionable.', max_digits=10, null=True, verbose_name='Threshold Score'),
        ),
        migrations.CreateModel(
            name='CompositeConstructScaleScoring',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('composite_construct_scale_name', models.CharField(blank=True, help_text='The name of the composite construct scale', max_length=255, null=True)),
                ('scoring_type', models.CharField(choices=[('Average', 'Average'), ('Sum', 'Sum'), ('Median', 'Median'), ('Mode', 'Mode'), ('Min', 'Minimum'), ('Max', 'Maximum')], help_text='The type of scoring to use for the composite construct scale', max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('construct_scales', models.ManyToManyField(help_text='The construct scales which will be used to calculate the composite construct scale', to='promapp.constructscale')),
            ],
            options={
                'verbose_name': 'Composite Construct Scale Scoring',
                'verbose_name_plural': 'Composite Construct Scale Scorings',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireConstructScoreComposite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.DecimalField(blank=True, decimal_places=2, help_text='The score for the composite construct', max_digits=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('composite_construct_scale', models.ForeignKey(help_text='The composite construct scale to which the score belongs', on_delete=django.db.models.deletion.CASCADE, to='promapp.compositeconstructscalescoring')),
                ('questionnaire_submission', models.ForeignKey(help_text='The submission to which the composite score belongs', on_delete=django.db.models.deletion.CASCADE, to='promapp.questionnairesubmission')),
            ],
            options={
                'verbose_name': 'Questionnaire Construct Score Composite',
                'ordering': ['-created_date'],
            },
        ),
    ]
