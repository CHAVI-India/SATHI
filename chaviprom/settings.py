"""
Django settings for chaviprom project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""



# Build paths inside the project like this: BASE_DIR / 'subdir'.
from pathlib import Path
BASE_DIR = Path(__file__).resolve().parent.parent

import os
from dotenv import load_dotenv
from django.utils.translation import gettext_lazy as _

env_path = os.path.join(BASE_DIR, '.env')
load_dotenv(env_path)



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY','adsfj239048q2389qdjfasdmfa;ldsjkf;askdjf;ad21232312^&%&%%*^%*')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DJANGO_DEBUG', 'False') != 'False'

ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS','localhost').split(',')

CSRF_TRUSTED_ORIGINS = os.getenv('DJANGO_CSRF_TRUSTED_ORIGINS','*').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'secured_fields',
    'crispy_forms',
    'crispy_tailwind',
    'modeltranslation',
    'promapp',
    'patientapp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'chaviprom.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'chaviprom.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.environ.get('DJANGO_DATABASE_ENGINE','django.db.backends.sqlite3'),
        'NAME': os.environ.get('DJANGO_DATABASE_NAME','db.sqlite3'),
        'USER': os.environ.get('DJANGO_DATABASE_USER',''),
        'PASSWORD': os.environ.get('DJANGO_DATABASE_PASSWORD',''),
        'HOST': os.environ.get('DJANGO_DATABASE_HOST','localhost'),
        'PORT': os.environ.get('DJANGO_DATABASE_PORT','5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = os.getenv('DJANGO_LANGUAGE_CODE','en-gb')

TIME_ZONE = os.getenv('DJANGO_TIME_ZONE','UTC')

USE_I18N = True

USE_TZ = True

# Parse LANGUAGES from environment variable
# Format in .env should be: en:English,de:German,fr:French
language_settings = os.getenv('DJANGO_LANGUAGES', 'en:English')
LANGUAGES = [
    (code.strip(), _(name.strip()))
    for lang in language_settings.split(',')
    for code, name in [lang.split(':', 1)]
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Settings for Django secured fields

SECURED_FIELDS_KEY = os.getenv('DJANGO_SECURED_FIELDS_KEY','adsfj239048q2389qdjfasdmfa;ldsjkf;askdjf;ad21232312^&%&%%*^%*').split(',')

# Crispy Forms Settings
CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"
CRISPY_TEMPLATE_PACK = "tailwind"